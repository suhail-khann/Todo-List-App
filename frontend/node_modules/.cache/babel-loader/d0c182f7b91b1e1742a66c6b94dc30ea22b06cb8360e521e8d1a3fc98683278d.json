{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUHAIL KHAN\\\\OneDrive\\\\Desktop\\\\todolist\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport SummaryButton from './components/SummaryButton';\nimport Notification from './components/Notification';\nimport { fetchTodos, addTodo, deleteTodo, editTodo, summarizeTodos } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [notification, setNotification] = useState({\n    message: '',\n    type: ''\n  });\n  useEffect(() => {\n    const loadTodos = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchTodos();\n        setTodos(data);\n      } catch (error) {\n        showNotification('Failed to load todos', 'error');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadTodos();\n  }, []);\n  const showNotification = (message, type) => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => {\n      setNotification({\n        message: '',\n        type: ''\n      });\n    }, 3000);\n  };\n  const handleAddTodo = async text => {\n    setIsLoading(true);\n    try {\n      const newTodo = await addTodo({\n        text,\n        completed: false\n      });\n      setTodos([...todos, newTodo]);\n      showNotification('Todo added successfully', 'success');\n    } catch (error) {\n      showNotification('Failed to add todo', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    setIsLoading(true);\n    try {\n      await deleteTodo(id);\n      setTodos(todos.filter(todo => todo.id !== id));\n      showNotification('Todo deleted successfully', 'success');\n    } catch (error) {\n      showNotification('Failed to delete todo', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleEditTodo = async (id, updatedTodo) => {\n    setIsLoading(true);\n    try {\n      const updated = await editTodo(id, updatedTodo);\n      setTodos(todos.map(todo => todo.id === id ? updated : todo));\n      showNotification('Todo updated successfully', 'success');\n    } catch (error) {\n      showNotification('Failed to update todo', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleToggleComplete = async id => {\n    const todoToUpdate = todos.find(todo => todo.id === id);\n    if (todoToUpdate) {\n      await handleEditTodo(id, {\n        ...todoToUpdate,\n        completed: !todoToUpdate.completed\n      });\n    }\n  };\n  const handleSummarize = async () => {\n    setIsLoading(true);\n    try {\n      const pendingTodos = todos.filter(todo => !todo.completed);\n      if (pendingTodos.length === 0) {\n        showNotification('No pending todos to summarize', 'warning');\n        setIsLoading(false);\n        return;\n      }\n      const response = await summarizeTodos();\n      showNotification('Summary sent to Slack successfully', 'success');\n    } catch (error) {\n      showNotification('Failed to send summary to Slack', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo Summary Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n        onAddTodo: handleAddTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), notification.message && /*#__PURE__*/_jsxDEV(Notification, {\n        message: notification.message,\n        type: notification.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        onDeleteTodo: handleDeleteTodo,\n        onEditTodo: handleEditTodo,\n        onToggleComplete: handleToggleComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SummaryButton, {\n        onSummarize: handleSummarize,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SNs8spYr8bL714Yt4C85EYkr05o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoList","SummaryButton","Notification","fetchTodos","addTodo","deleteTodo","editTodo","summarizeTodos","jsxDEV","_jsxDEV","App","_s","todos","setTodos","isLoading","setIsLoading","notification","setNotification","message","type","loadTodos","data","error","showNotification","setTimeout","handleAddTodo","text","newTodo","completed","handleDeleteTodo","id","filter","todo","handleEditTodo","updatedTodo","updated","map","handleToggleComplete","todoToUpdate","find","handleSummarize","pendingTodos","length","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTodo","onDeleteTodo","onEditTodo","onToggleComplete","onSummarize","_c","$RefreshReg$"],"sources":["C:/Users/SUHAIL KHAN/OneDrive/Desktop/todolist/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoForm from './components/TodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport SummaryButton from './components/SummaryButton';\r\nimport Notification from './components/Notification';\r\nimport { fetchTodos, addTodo, deleteTodo, editTodo, summarizeTodos } from './services/api';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [notification, setNotification] = useState({ message: '', type: '' });\r\n\r\n  useEffect(() => {\r\n    const loadTodos = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const data = await fetchTodos();\r\n        setTodos(data);\r\n      } catch (error) {\r\n        showNotification('Failed to load todos', 'error');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTodos();\r\n  }, []);\r\n\r\n  const showNotification = (message, type) => {\r\n    setNotification({ message, type });\r\n    setTimeout(() => {\r\n      setNotification({ message: '', type: '' });\r\n    }, 3000);\r\n  };\r\n\r\n  const handleAddTodo = async (text) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const newTodo = await addTodo({ text, completed: false });\r\n      setTodos([...todos, newTodo]);\r\n      showNotification('Todo added successfully', 'success');\r\n    } catch (error) {\r\n      showNotification('Failed to add todo', 'error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTodo = async (id) => {\r\n    setIsLoading(true);\r\n    try {\r\n      await deleteTodo(id);\r\n      setTodos(todos.filter(todo => todo.id !== id));\r\n      showNotification('Todo deleted successfully', 'success');\r\n    } catch (error) {\r\n      showNotification('Failed to delete todo', 'error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditTodo = async (id, updatedTodo) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const updated = await editTodo(id, updatedTodo);\r\n      setTodos(todos.map(todo => todo.id === id ? updated : todo));\r\n      showNotification('Todo updated successfully', 'success');\r\n    } catch (error) {\r\n      showNotification('Failed to update todo', 'error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleToggleComplete = async (id) => {\r\n    const todoToUpdate = todos.find(todo => todo.id === id);\r\n    if (todoToUpdate) {\r\n      await handleEditTodo(id, { ...todoToUpdate, completed: !todoToUpdate.completed });\r\n    }\r\n  };\r\n\r\n  const handleSummarize = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const pendingTodos = todos.filter(todo => !todo.completed);\r\n      if (pendingTodos.length === 0) {\r\n        showNotification('No pending todos to summarize', 'warning');\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const response = await summarizeTodos();\r\n      showNotification('Summary sent to Slack successfully', 'success');\r\n    } catch (error) {\r\n      showNotification('Failed to send summary to Slack', 'error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header>\r\n        <h1>Todo Summary Assistant</h1>\r\n      </header>\r\n      <main>\r\n        <TodoForm onAddTodo={handleAddTodo} />\r\n        {notification.message && (\r\n          <Notification message={notification.message} type={notification.type} />\r\n        )}\r\n        <TodoList \r\n          todos={todos} \r\n          onDeleteTodo={handleDeleteTodo} \r\n          onEditTodo={handleEditTodo} \r\n          onToggleComplete={handleToggleComplete}\r\n        />\r\n        <SummaryButton onSummarize={handleSummarize} isLoading={isLoading} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}