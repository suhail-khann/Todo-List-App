{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\nexport const fetchTodos = async () => {\n  const response = await fetch(`${API_BASE_URL}/todos`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch todos');\n  }\n  return response.json();\n};\nexport const addTodo = async todoData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/todos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todoData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add todo');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error adding todo:', error);\n    throw error;\n  }\n};\nexport const editTodo = async (id, updatedTodo) => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedTodo)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to update todo');\n  }\n  return response.json();\n};\nexport const deleteTodo = async id => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Failed to delete todo');\n  }\n  return true;\n};\nexport const summarizeTodos = async () => {\n  const response = await fetch(`${API_BASE_URL}/summarize`, {\n    method: 'POST'\n  });\n  if (!response.ok) {\n    throw new Error('Failed to summarize todos');\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchTodos","response","fetch","ok","Error","json","addTodo","todoData","method","headers","body","JSON","stringify","error","console","editTodo","id","updatedTodo","deleteTodo","summarizeTodos"],"sources":["C:/Users/SUHAIL KHAN/OneDrive/Desktop/todolist/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\r\n\r\nexport const fetchTodos = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/todos`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch todos');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const addTodo = async (todoData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/todos`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(todoData),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to add todo');\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error adding todo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const editTodo = async (id, updatedTodo) => {\r\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(updatedTodo),\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Failed to update todo');\r\n  }\r\n  \r\n  return response.json();\r\n};\r\n\r\nexport const deleteTodo = async (id) => {\r\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Failed to delete todo');\r\n  }\r\n  \r\n  return true;\r\n};\r\n\r\nexport const summarizeTodos = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/summarize`, {\r\n    method: 'POST',\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Failed to summarize todos');\r\n  }\r\n  \r\n  return response.json();\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAElF,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,QAAQ,CAAC;EACrD,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,QAAQ,EAAE;MACpDY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAOC,EAAE,EAAEC,WAAW,KAAK;EACjD,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,UAAUoB,EAAE,EAAE,EAAE;IAC1DR,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,WAAW;EAClC,CAAC,CAAC;EAEF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EAEA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMa,UAAU,GAAG,MAAOF,EAAE,IAAK;EACtC,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,UAAUoB,EAAE,EAAE,EAAE;IAC1DR,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EAEA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,YAAY,EAAE;IACxDY,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EAEA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}